trigger:
- none

pool:
  vmImage: windows-latest

steps:
- checkout: self
  persistCredentials: true
  clean: true
- task: PowerPlatformToolInstaller@0
  inputs:
    DefaultVersion: true
- task: PowerPlatformPublishCustomizations@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROMTS-GSRST DEV'
- task: PowerPlatformExportSolution@0
  displayName: 'Export Unmanaged Solution'
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROMTS-GSRST DEV'
    SolutionName: '$(SolutionName)'
    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
    AsyncOperation: true
    MaxAsyncWaitTime: '240'
#- task: PowerPlatformExportSolution@0
#  displayName: 'Export Managed Solution'
#  inputs:
#    authenticationType: 'PowerPlatformSPN'
#    PowerPlatformSPN: 'ROMTS-GSRST DEV'
#    SolutionName: '$(SolutionName)'
#    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName)_managed.zip'
#    Managed: true
#    AsyncOperation: true
#    MaxAsyncWaitTime: '240'
#- task: PublishPipelineArtifact@1
#  inputs:
#    targetPath: '$(Build.ArtifactStagingDirectory)\*.zip'
#    artifact: 'drop'
#    publishLocation: 'pipeline'
- task: PowerPlatformUnpackSolution@0
  inputs:
    SolutionInputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
    SolutionTargetFolder: '$(Build.SourcesDirectory)\$(SolutionName)'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      echo "Committing all solution changes"
      git config user.email "nepasrepondre-noreply@tc.gc.ca"
      git config user.name "tc-buildbot"
      git checkout main
      git add --all
      git commit -m "Update Solution - $env:SOLUTIONNAME"
      
      echo "Push solution changes to the remote repository"
      git -c http.extraheader="AUTHORIZATION: basic $(System.AccessToken)" push --force origin main